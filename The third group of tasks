题目1：写一个函数，求：Sn=a+aa+aaa+···+aa···a，其中a是一个数字。主程序输入n和a，求多项式的前n项和。
#include<stdio.h>
int f(int a,int n){
 int sum = 0;
 int num = 0;
 while (n){
 num+= a;//求每一项的值
     sum += num;//求n项值的和
 a = a*10;
 n--;//当数字的位数减至0时，表示数字的位数已经从个位遍历至最高位。此时，跳出循环
 }
 return sum;
}
int main(){
 int n;
 int a;
 printf("enter a n:");
 scanf("%d %d",&a,&n);
 int ret=0;
 ret=f(a,n);
 printf("%d\n",ret);
 return 0;
}

题目二：编程求数列2/1，3/2，5/3，8/5，13/8，21/13，···，前N项之和。主函数输入N，调用函数完成计算。
#include <stdio.h>

double f(int n);
int mu0(int i);
int zi0(int i);

int main(){
 int n;
 double ret;
 printf("enter n:");
 scanf("%d",&n);
 ret=f(n);
 printf("%f",ret);
 return 0;
} 

int mu0(int i){
 int k;
 int mu;
 for(k=1;k<=i;k++){
 if(k==1){
 mu=1;
 }
 else if(k==2){
 mu=2;
 }else {
 mu=mu0(k-2)+mu0(k-1);
 } 
 }
 return mu;
}

int zi0(int i){
 int k;
 int zi;
 for(k=1;k<=i;k++){
 if(k==1){
 zi=2;
 }
 else if(k==2){
 zi=3;
 }else {
 zi=zi0(k-2)+zi0(k-1);
 } 
 }
 return zi;
}

double f(int n){
 int i;
 double sum=0;
 for(i=1;i<=n;i++){
 sum=sum+zi0(i)*1.0/mu0(i);
 }
 return sum;
}

题目三：输入两个整数数组a,b，每个数组有五个整数，将两者合并到数组c后输出。例：a的值为：1,3,7,18,20，b的值为：2,4,5,19,30。合并后c的值为：1,3,7,18,20,2,4,5,19,30。
#include <stdio.h>

int main(){
 int a[5];
 int b[5];
 int c[10];
 int i;
 printf("enter a：");
 for(i=0;i<5;i++){
 scanf("%d",&a[i]);
 }
 printf("enter b：");
 for(i=0;i<5;i++){
 scanf("%d",&b[i]);
 }
 for(i=0;i<10;i++){
 c[i]=0;
 }
 printf("c[]=");
 for(i=0;i<10;i++){
 if(i<5){
 int x;
 x=a[i];
 c[i]=x;
 printf("%d ",c[i]);
 }
 if(5<=i<10){
 c[i]=b[i-5];
 }
 }
 for(i=5;i<10;i++){
 printf("%d ",c[i]);
 }
 return 0;
} 

题目四：将2个有序数组a,b，每个数组有五个整数，合并到数组c，合并后仍然有序。例：a的值为：1,3,7,18,20，b的值为：2,4,5,19,30。合并后c的值为：1,2,3,4,5,7,18,19,20,30。
#include <stdio.h>

void main(){

    int a[5],b[5],c[10],i,ia,ib,ic;
    printf("enter a[]:");
    for(i=0;i<5;i++)
        scanf("%d",&a[i]);
    printf("enter b[]:");
    for(i=0;i<5;i++)
        scanf("%d",&b[i]);
    printf("\n");
    ia=0;ib=0;ic=0;
    while(ia<5&&ib<5){
        if(a[ia]<b[ib]){
            c[ic]=a[ia];
            ia++;
        }
        else{
            c[ic]=b[ib];
            ib++;
        }
        ic++;
    }
    while(ia<5){
        c[ic]=a[ia];
        ia++;
        ic++;
    }
    while(ib<5){
        c[ic]=b[ib];
        ib++;
        ic++;
    }
    printf("c[]=");
    for(i=0;i<10;i++){
        printf("%d ",c[i]);
 }
}

题目五：对有10个元素的整型数组，降序排序。
#include <stdio.h>
void main(){
int a[10];
int i,j,t;
printf("enter a[]:");
for (i=0;i<10;i++) 
scanf("%d",&a[i]);
for (i=0;i<9;i++)
for (j=0;j<9;j++)
if (a[j]<a[j+1]){
t=a[j];
a[j]=a[j+1];
a[j+1]=t;
}
for (i=0;i<10;i++) 
printf("%d ",a[i]);
}

题目六：用折半查找法对有序数组进行查找，找到输出下标，没找到输出-1。
#include<stdio.h>

int binsearch(int a[], int size, int  goal){
 int mid = 0;
 int left = 0;
 int right = size - 1;
 while (left <= right){
 mid = (left + right) / 2;
 if (goal > a[mid]){
 left = mid + 1;
 }
 else if (goal < a[mid]){
 right = mid - 1;
  }
 else{
 return mid;
 }
 }
 return -1;
}
int main(){
 int a[9];
 int i;
 printf("enter a[]:");
 for(i=0;i<9;i++)
 scanf("%d",&a[i]);
 int size = sizeof(a) / sizeof(a[0]);
 int goal;
 printf("goal:");
 scanf("%d",&goal);
 int index = binsearch(a, size, goal);
 printf("%d\n", index);
 return 0;
}

题目七：编程实现字符串的连接。不许用库函数，只能在主函数中完成。
#include<stdio.h>

int main()
{
 char a[100]="computational ";
 char b[]="thinking";
 int i=0,k=0;
 while(b[i]!='\0')
 {
 if(a[k]=='\0')
 a[k]=b[i++];
 k++;
 }
 puts(a);
 return 0;
}

题目八：编程实现字符串的拷贝。不许用库函数，只能在主函数中完成。
#include<stdio.h>

int main()
{
 char a[100];
 char b[]="computational thinking";
 int i=0;
 while(b[i]!='\0')
 {
 a[i]=b[i];
 i++; 
 }
 puts(a);
 return 0;
}

题目九：编程将一个字符串插入到另一个字符串的第n个位置。
#include<stdio.h>

int main()
{
 char a[100]="computational";
 char b[]="thinking";
 int i=0,n;
 puts(a);
 printf("你想放在哪里："); 
 scanf("%d",&n);
 while(b[i]!='\0')
 {
 a[n]=b[i++];
 n++;
 }
 puts(a);
 return 0;
}

题目十：编写程序，从键盘输入一行字符，统计其中英文字母、空格、数字和其他字符的个数。
#include<stdio.h>

int main()
{
 char a;
 int English=0,number=0,space=0,others=0;
 while ((a = getchar()) != EOF)
 {
 if(a>='a'&&a<='z'||a>='A'&&a<='Z')
 English++;
 else if(a>='0'&&a<='9')
 number++;
 else if(a==' ')
 space++;
 else
 others++;
 }
 printf("英文字母数：%d\n",English);
 printf("数字数：%d\n",number);
 printf("空格数：%d\n",space);
 printf("其他字符数：%d\n",others-1);//除去结束符 
 return 0;
}
